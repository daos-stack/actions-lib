name: RPM Test

on:
  workflow_call:
    inputs:
      NAME:
        type: string
        required: true
      DISTROS:
        type: string
        required: true
      TEST_TAG:
        type: string
        required: true
      # allow the caller to decide to run in GHA or not
      RUN_GHA:
        type: boolean
        default: false

permissions: {}

jobs:
  Test-with-DAOS:
    # TODO: investigate how cancelling this can cancel the downstream job
    name: Test RPMs with DAOS
    runs-on: [self-hosted, mockbuilder]
    if: |
        (inputs.RUN_GHA ||
         github.event_name == 'workflow_dispatch') &&
        ((!cancelled()) || success() || failure())
    permissions:
      issues: write
    timeout-minutes: 7200
    strategy:
      fail-fast: false
      matrix:
        # ideally we want to test on both master and release/* but there is no
        # GHA support on the release/2.6 branch yet
        # branch: [master, release/2.6]
        # until https://github.com/daos-stack/daos/pull/15576 lands
        # branch: [master]
        branch: [bmurrell/propagate-gha-run]
    env:
      PR_REPO: >-
        ${{ inputs.NAME }}@PR-${{ github.event.pull_request.number }}:${{ github.run_number }}
    steps:
      - name: Test RPMs with DAOS
        uses: convictional/trigger-workflow-and-wait@v1.6.5
        with:
          owner: daos-stack
          repo: daos
          github_token: ${{ secrets.GHA_WORKFLOW_TRIGGER }}
          comment_downstream_url: ${{ github.event.pull_request.comments_url }}
          workflow_file_name: 'rpm-build-and-test.yml'
          # TODO: or rather I suspect it's a TODO, but I suspect we need to create
          #       a temporary branch here so as not to pollute the landing branch
          #       runs with these tests
          ref: ${{ matrix.branch }}
          wait_interval: 10
          # TODO: rpm-test-version of course needs to either be the latest
          #       version, or better yet, no version and it installs the latest
          #       version
          client_payload: '{"pr-repos": "${{ env.PR_REPO }}",
                            "commit-message": "Override commit pragmas",
                            "test-tag": "load_mpi test_core_files ${{ inputs.TEST_TAG }}",
                            "functional-test-distros": "${{ inputs.DISTROS }}",
                            "run-gha:" "${{ inputs.RUN_GHA }}"
                           }'
          propagate_failure: true
      # TODO: investigate how cancelling this can cancel the downstream job
      - name: Cleanup downstream jobs
        if: cancelled()
        run: echo "Cancelling downstream jobs (but how?)"
